@page "/people/create"
@inject App1.Data.App1Context DB
@using App1.Data
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Person</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Person" OnValidSubmit="AddPerson" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Person.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Person.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Person.LastName" class="form-control" /> 
                <ValidationMessage For="() => Person.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dateofbirth" class="form-label">DateOfBirth:</label> 
                <InputDate id="dateofbirth" @bind-Value="Person.DateOfBirth" class="form-control" /> 
                <ValidationMessage For="() => Person.DateOfBirth" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Person.Email" class="form-control" /> 
                <ValidationMessage For="() => Person.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Person.Name" class="form-control" /> 
                <ValidationMessage For="() => Person.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="age" class="form-label">Age:</label> 
                <InputNumber id="age" @bind-Value="Person.Age" class="form-control" /> 
                <ValidationMessage For="() => Person.Age" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/people">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Person Person { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPerson()
    {
        DB.Person.Add(Person);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/people");
    }
}
