@page "/incomes/create"
@inject App1.Data.App1Context DB
@using App1.Data
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Income</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Income" OnValidSubmit="AddIncome" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="source" class="form-label">Source:</label> 
                <InputText id="source" @bind-Value="Income.Source" class="form-control" /> 
                <ValidationMessage For="() => Income.Source" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="amount" class="form-label">Amount:</label> 
                <InputNumber id="amount" @bind-Value="Income.Amount" class="form-control" /> 
                <ValidationMessage For="() => Income.Amount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="incomecategory" class="form-label">IncomeCategory:</label> 
                <InputText id="incomecategory" @bind-Value="Income.IncomeCategory" class="form-control" /> 
                <ValidationMessage For="() => Income.IncomeCategory" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="incomedate" class="form-label">IncomeDate:</label> 
                <InputDate id="incomedate" @bind-Value="Income.IncomeDate" class="form-control" /> 
                <ValidationMessage For="() => Income.IncomeDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="incomedescription" class="form-label">IncomeDescription:</label> 
                <InputText id="incomedescription" @bind-Value="Income.IncomeDescription" class="form-control" /> 
                <ValidationMessage For="() => Income.IncomeDescription" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/incomes">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Income Income { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddIncome()
    {
        DB.Income.Add(Income);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/incomes");
    }
}
